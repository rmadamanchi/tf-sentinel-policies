import "tfconfig"
import "strings"

calculate_module_sources = func() {
  module_sources = {}

  for tfconfig.module_paths as path_arr {
    path = strings.join(path_arr, ".")
    module = tfconfig.module(path_arr)

    for module.modules as included_module_name, included_module {
      included_module_path = ""
      if path == "" {
        included_module_path = included_module_name
      }else {
        included_module_path = path + "." + included_module_name
      }

      module_sources[included_module_path] = included_module.source
    }
  }

  return module_sources
}

# support nested modules
validate_module_sources = func() {
  validated = true

  validated = false
  for calculate_module_sources() as path, source {
     if strings.has_prefix(source, "github.com/rmadamanchi") or strings.has_prefix(source, ".") {
       print("--- Module Source [", path, ": ", source, "] permitted")
     }else {
       print("--- Module Source [", path, ": ", source, "] NOT permitted")
       validated = false
     }
  }

  return validated
}

module_sources_validated = validate_module_sources()

main = rule {
  module_sources_validated
}
